---
name: ecommerce/process_order
namespace_name: ecommerce
version: 1.0.0
module_namespace: Ecommerce
task_handler_class: OrderProcessing
description: "Complete e-commerce order processing workflow with reliability patterns"

# JSON Schema for input validation
schema:
  type: object
  required:
    - cart_items
    - payment_info
    - customer_info
  properties:
    cart_items:
      type: array
      minItems: 1
      items:
        type: object
        required:
          - product_id
          - quantity
        properties:
          product_id:
            type: integer
            minimum: 1
          quantity:
            type: integer
            minimum: 1
            maximum: 99
          price:
            type: number
            minimum: 0
    payment_info:
      type: object
      required:
        - token
        - amount
      properties:
        token:
          type: string
          minLength: 1
          description: "Payment method token from payment processor"
        amount:
          type: number
          minimum: 0
          description: "Total amount to charge in dollars"
        payment_method:
          type: string
          enum: ["card", "bank_transfer", "wallet"]
    customer_info:
      type: object
      required:
        - email
        - name
      properties:
        email:
          type: string
          format: email
        name:
          type: string
          minLength: 1
        phone:
          type: string
          pattern: "^[+]?[0-9-\\s()]+$"

# Step definitions with reliability patterns
step_templates:
  - name: validate_cart
    description: "Validate cart items, check inventory, calculate totals"
    handler_class: Ecommerce::StepHandlers::ValidateCartHandler
    default_retryable: true
    default_retry_limit: 3
    handler_config:
      timeout_seconds: 15
    
  - name: process_payment
    description: "Process payment with fraud detection and retry logic"
    depends_on_step: validate_cart
    handler_class: Ecommerce::StepHandlers::ProcessPaymentHandler
    default_retryable: true
    default_retry_limit: 3
    handler_config:
      timeout_seconds: 30
    
  - name: update_inventory
    description: "Atomically update inventory levels with race condition protection"
    depends_on_step: process_payment
    handler_class: Ecommerce::StepHandlers::UpdateInventoryHandler
    default_retryable: true
    default_retry_limit: 2
    handler_config:
      timeout_seconds: 20
    
  - name: create_order
    description: "Create order record with full audit trail"
    depends_on_step: update_inventory
    handler_class: Ecommerce::StepHandlers::CreateOrderHandler
    default_retryable: true
    default_retry_limit: 2
    handler_config:
      timeout_seconds: 15
    
  - name: send_confirmation
    description: "Send order confirmation email with delivery tracking"
    depends_on_step: create_order
    handler_class: Ecommerce::StepHandlers::SendConfirmationHandler
    default_retryable: true
    default_retry_limit: 5
    handler_config:
      timeout_seconds: 10

# Environment-specific configurations
environments:
  development:
    step_templates:
      - name: validate_cart
        handler_config:
          timeout_seconds: 30  # Longer timeout for debugging
        
      - name: process_payment
        handler_config:
          debug_mode: true
          simulate_failures: true
          
      - name: send_confirmation
        handler_config:
          email_backend: "log"  # Log emails instead of sending
          
  test:
    step_templates:
      - name: process_payment
        handler_config:
          payment_backend: "simulator"
          
      - name: send_confirmation
        handler_config:
          email_backend: "test"
          
  production:
    step_templates:
      - name: validate_cart
        handler_config:
          timeout_seconds: 10  # Faster timeout in production
        
      - name: process_payment
        handler_config:
          payment_backend: "stripe"
          fraud_detection: true
          
      - name: send_confirmation
        handler_config:
          email_backend: "sendgrid"
          tracking_enabled: true

# Retry strategies by error type
retry_strategies:
  payment_timeout:
    retry_limit: 5
    backoff_strategy: exponential
    base_delay: 2
    max_delay: 60
    
  inventory_conflict:
    retry_limit: 3
    backoff_strategy: linear
    base_delay: 1
    
  email_delivery:
    retry_limit: 10
    backoff_strategy: exponential
    base_delay: 5
    max_delay: 300

# Monitoring and alerting configuration
monitoring:
  success_rate_threshold: 0.95
  error_rate_alert_threshold: 0.05
  step_duration_alert_ms:
    validate_cart: 5000
    process_payment: 15000
    update_inventory: 3000
    create_order: 2000
    send_confirmation: 10000
    
  business_metrics:
    - name: "checkout_conversion_rate"
      description: "Percentage of started checkouts that complete successfully"
    - name: "average_order_value"
      description: "Average total amount of completed orders"
    - name: "payment_failure_rate"
      description: "Percentage of payments that fail"
