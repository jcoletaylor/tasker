# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "Ruby on Rails CI"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # Linting job - runs first and fails fast if code style issues
  lint:
    name: Lint
    runs-on: ubuntu-22.04  # Use stable Ubuntu version

    env:
      BUNDLE_WITH: development:test  # Ensure development gems are installed for linting

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.4'  # Use specific version
          bundler-cache: true

      - name: Run RuboCop
        run: bundle exec rubocop --format github

  # Main test job with matrix strategy
  test:
    name: Test (Ruby ${{ matrix.ruby-version }})
    runs-on: ubuntu-22.04  # Use stable Ubuntu version
    needs: lint  # Run tests only after linting passes

    strategy:
      fail-fast: false  # Don't cancel other matrix jobs if one fails
      matrix:
        ruby-version: ['3.1', '3.2', '3.3']  # Use major.minor versions for latest patches

    services:
      postgres:
        image: postgres:14-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: tasker
          POSTGRES_PASSWORD: tasker
          POSTGRES_DB: tasker_engine_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      RAILS_ENV: test
      DATABASE_URL: postgres://tasker:tasker@localhost:5432/tasker_engine_test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby ${{ matrix.ruby-version }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true

      - name: Set up database schema
        run: bundle exec rails db:schema:load

      - name: Run tests
        run: bundle exec rspec --format documentation --format RspecJunitFormatter --out tmp/rspec.xml

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()  # Upload even if tests fail
        with:
          name: test-results-ruby-${{ matrix.ruby-version }}
          path: tmp/rspec.xml
