#!/bin/bash
# Docker development helper script for Tasker Application: <%= app_name %>
# Generated by Tasker Demo Application Builder v2.6.0

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Helper function for colored output
log() {
    echo -e "${BLUE}[docker-dev]${NC} $1"
}

success() {
    echo -e "${GREEN}[docker-dev]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[docker-dev]${NC} $1"
}

error() {
    echo -e "${RED}[docker-dev]${NC} $1"
}

# Check if docker-compose is available
if ! command -v docker-compose &> /dev/null; then
    error "docker-compose is not installed or not in PATH"
    exit 1
fi

# Function to show usage
show_usage() {
    echo "Usage: $0 [COMMAND] [OPTIONS]"
    echo ""
    echo "Docker development helper for <%= app_name %>"
    echo ""
    echo "Commands:"
    echo "  up              Start all services (app, postgres, redis)"
    echo "  up-full         Start all services including observability stack"
    echo "  down            Stop all services"
    echo "  restart         Restart the app service"
    echo "  logs            Show logs for all services"
    echo "  logs-app        Show logs for app service only"
    echo "  console         Open Rails console"
    echo "  bash            Open bash shell in app container"
    echo "  test            Run test suite"
    echo "  migrate         Run database migrations"
    echo "  setup           Run Tasker setup"
    echo "  reset-db        Reset database (WARNING: destroys data)"
    echo "  build           Rebuild app container"
    echo "  clean           Remove containers and volumes (WARNING: destroys data)"
    echo "  status          Show status of all services"
    echo "  validate        Run Tasker validation scripts"
    echo ""
    echo "Options:"
    echo "  -h, --help      Show this help message"
}

# Main command handling
case "${1:-}" in
    up)
        log "Starting core services (app, postgres, redis)..."
        docker-compose up -d postgres redis
        log "Waiting for services to be ready..."
        sleep 5
        docker-compose up app
        ;;
    up-full)
        log "Starting all services including observability stack..."
        docker-compose --profile observability up -d postgres redis jaeger prometheus
        log "Waiting for services to be ready..."
        sleep 5
        docker-compose --profile observability up app
        ;;
    down)
        log "Stopping all services..."
        docker-compose --profile observability down
        success "All services stopped"
        ;;
    restart)
        log "Restarting app service..."
        docker-compose restart app
        success "App service restarted"
        ;;
    logs)
        docker-compose logs -f
        ;;
    logs-app)
        docker-compose logs -f app
        ;;
    console)
        log "Opening Rails console..."
        docker-compose exec app rails console
        ;;
    bash)
        log "Opening bash shell..."
        docker-compose exec app bash
        ;;
    test)
        log "Running test suite..."
        docker-compose exec app bundle exec rspec
        ;;
    migrate)
        log "Running database migrations..."
        docker-compose exec app rails db:migrate
        success "Migrations completed"
        ;;
    setup)
        log "Running Tasker setup..."
        docker-compose exec app rails tasker:setup
        success "Tasker setup completed"
        ;;
    reset-db)
        warn "This will destroy all database data. Are you sure? (y/N)"
        read -r response
        if [[ "$response" =~ ^([yY][eE][sS]|[yY])$ ]]; then
            log "Resetting database..."
            docker-compose exec app rails db:drop db:create db:migrate
            docker-compose exec app rails tasker:setup
            success "Database reset completed"
        else
            log "Database reset cancelled"
        fi
        ;;
    build)
        log "Rebuilding app container..."
        docker-compose build app
        success "App container rebuilt"
        ;;
    clean)
        warn "This will remove all containers, images, and volumes. Are you sure? (y/N)"
        read -r response
        if [[ "$response" =~ ^([yY][eE][sS]|[yY])$ ]]; then
            log "Cleaning up Docker resources..."
            docker-compose --profile observability down -v --rmi all
            success "Cleanup completed"
        else
            log "Cleanup cancelled"
        fi
        ;;
    status)
        log "Service status:"
        docker-compose ps
        ;;
    validate)
        log "Running Tasker validation scripts..."
        if docker-compose ps jaeger | grep -q "Up"; then
            log "Running Jaeger validation..."
            docker-compose exec app ruby scripts/validate_jaeger_integration.rb
        else
            warn "Jaeger not running, skipping Jaeger validation"
        fi
        
        if docker-compose ps prometheus | grep -q "Up"; then
            log "Running Prometheus validation..."
            docker-compose exec app ruby scripts/validate_prometheus_integration.rb
        else
            warn "Prometheus not running, skipping Prometheus validation"
        fi
        ;;
    -h|--help|"")
        show_usage
        ;;
    *)
        error "Unknown command: $1"
        echo ""
        show_usage
        exit 1
        ;;
esac